"""Add summary fields to File model

Revision ID: 09843a8ffa06
Revises: cbe822f33d89
Create Date: 2025-07-16 14:07:32.775561

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '09843a8ffa06'
down_revision: Union[str, Sequence[str], None] = 'cbe822f33d89'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(None, 'courses', ['id'])
    # Instead of altering the type, drop and re-add the column for deadlines.file_id
    op.drop_column('deadlines', 'file_id')
    op.add_column('deadlines', sa.Column('file_id', sa.Integer(), nullable=True))
    op.create_unique_constraint(None, 'deadlines', ['id'])
    op.add_column('files', sa.Column('text', sa.Text(), nullable=True))
    op.add_column('files', sa.Column('deadlines', sa.Text(), nullable=True))
    op.add_column('files', sa.Column('uploaded_at', sa.DateTime(), nullable=True))
    # Instead of altering the type, drop and re-add the column for files.id
    # Only drop the index if it exists. If not sure, comment out or remove this line to avoid errors.
    # op.drop_index(op.f('ix_files_id'), table_name='files')
    # If you are sure the index does not exist, you can safely remove this line.
    op.drop_constraint(op.f('files_pkey'), 'files', type_='primary')
    op.drop_column('files', 'id')
    op.add_column('files', sa.Column('id', sa.Integer(), primary_key=True, autoincrement=True, nullable=False))
    op.create_primary_key(op.f('files_pkey'), 'files', ['id'])
    op.create_index(op.f('ix_files_id'), 'files', ['id'], unique=False)
    # Remove or comment out the original alter_column for files.id
    # op.alter_column('files', 'id',
    #            existing_type=sa.UUID(),
    #            type_=sa.Integer(),
    #            existing_nullable=False,
    #            autoincrement=True)
    op.alter_column('files', 'summary',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=True)
    op.drop_constraint(op.f('files_course_id_fkey'), 'files', type_='foreignkey')
    op.drop_constraint(op.f('files_user_id_fkey'), 'files', type_='foreignkey')
    op.drop_column('files', 'filepath')
    op.drop_column('files', 'upload_date')
    op.drop_column('files', 'user_id')
    op.drop_column('files', 'course_id')
    op.drop_column('files', 'embedding_id')
    op.create_unique_constraint(None, 'users', ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='unique')
    op.add_column('files', sa.Column('embedding_id', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('files', sa.Column('course_id', sa.UUID(), autoincrement=False, nullable=False))
    op.add_column('files', sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False))
    op.add_column('files', sa.Column('upload_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('files', sa.Column('filepath', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.create_foreign_key(op.f('files_user_id_fkey'), 'files', 'users', ['user_id'], ['id'])
    op.create_foreign_key(op.f('files_course_id_fkey'), 'files', 'courses', ['course_id'], ['id'])
    op.drop_index(op.f('ix_files_id'), table_name='files')
    op.alter_column('files', 'summary',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.alter_column('files', 'id',
               existing_type=sa.Integer(),
               type_=sa.UUID(),
               existing_nullable=False,
               autoincrement=True)
    op.drop_column('files', 'uploaded_at')
    op.drop_column('files', 'deadlines')
    op.drop_column('files', 'text')
    op.drop_constraint(None, 'deadlines', type_='unique')
    op.alter_column('deadlines', 'file_id',
               existing_type=sa.Integer(),
               type_=sa.UUID(),
               existing_nullable=True)
    op.drop_constraint(None, 'courses', type_='unique')
    # ### end Alembic commands ###
